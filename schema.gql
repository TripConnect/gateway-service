# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthUser {
  token: Token
  userInfo: Self
}

type Conversation {
  createdAt: DateTime!
  createdBy: User!
  id: ID!
  lastMessageAt: DateTime
  members(pageNumber: Int!, pageSize: Int!): [User!]!
  messages(messageAfter: DateTime, messageBefore: DateTime, messageLimit: Int!): [Message!]!
  name: String!
  type: ConversationType!
}

"""Type of conversation"""
enum ConversationType {
  GROUP
  PRIVATE
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Message {
  content: String!
  conversation: Conversation!
  createdAt: DateTime!
  fromUser: User!
  id: ID!
  sentTime: DateTime!
}

type Mutation {
  createConversation(memberIds: [String!]!, name: String, type: ConversationType!): Conversation!
  enable2FA(otp: String!, secret: String!): ResponseModel!
  generate2FASecret: Settings!
  sendMessage(content: String!, conversation_id: ID!): SendMessageAck!
  signIn(otp: String = "", password: String!, username: String!): AuthUser!
}

type Query {
  conversation(id: ID!): Conversation!
  me: Self!
  user(id: ID!): User!
  users(pageNumber: Int! = 0, pageSize: Int! = 20, searchTerm: String!): [User!]!
}

type ResponseModel {
  success: Boolean!
}

type Self {
  avatar: String!
  displayName: String!
  enabledTwofa: Boolean!
  id: ID!
}

type SendMessageAck {
  correlationId: String!
}

type Settings {
  qrCode: String!
  secret: String!
}

type Token {
  accessToken: String!
  refreshToken: String!
}

type User {
  avatar: String!
  displayName: String!
  id: ID!
}